name: Automatic tests
on:
  workflow_dispatch:
  push:
    branches:
      - main
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.x'
      - name: Move to github workspace
        run: |
          cd ${{ github.workspace }}
      - name: Add url and token to config file 
        run: |
          sed -i 's#endpoint#${{ secrets.URL }}#g' src/UnitTests/logzio.config
          sed -i 's/token/${{ secrets.TOKEN }}/g' src/UnitTests/logzio.config
      - name: Run unit tests
        run: |
          dotnet test src --collect:"XPlat Code Coverage"
      - name: Move to TestResults directory
        run: |
          cd src/UnitTests/TestResults
          echo | ls -a
      - name: Move to one of the directories
        run: |
          echo | ls -d */
          dir=$(ls -d */ | head -1)
          echo $dir
          cd $dir
      - name: Get line-rate (code-coverage)
        run: |
          line_rate=$(egrep -o [0-9].?[0-9]* coverage.cobertura.xml | head -1)
      - name: Get branch-rate (code-coverage)
        run: |
          branch_rate=$(egrep -o [0-9].?[0-9]* coverage.cobertura.xml | head -2 | tail -1)
      - name: Print code-coverage
        run: |
          echo | awk -v num=$line_rate '{ printf "line-rate: %d\n", (num * 100) }'
          echo | awk -v num=$branch_rate '{ printf "branch-rate: %d\n", (num * 100) }'
      - name: Check code-coverage
        run: |
          echo | awk -v num=$line_rate '{ if (num < 0.5) { printf "line-rate is less than 50%"; exit 1 } else { exit 0 }}'
          exit_code=$?

          if [ $exit_code -eq 1 ]; then
            exit 1
          fi

          echo | awk -v num=$branch_rate '{ if (num < 0.3) { printf "line-rate is less than 30%"; exit 1 } else { exit 0 }}'
          exit_code=$?

          if [ $exit_code -eq 1 ]; then
            exit 1
          fi          